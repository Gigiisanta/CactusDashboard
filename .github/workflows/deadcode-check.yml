name: Dead Code Detection

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  deadcode-check:
    name: Dead Code Detection
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cactus-wealth-frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd cactus-wealth-frontend
          npm ci
          
      - name: Run dead code detection
        id: deadcode
        run: |
          cd cactus-wealth-frontend
          npm run lint:deadcode
        continue-on-error: true
        
      - name: Upload dead code report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: deadcode-report
          path: cactus-wealth-frontend/deadcode-report.json
          retention-days: 30
          
      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let reportContent = '## Dead Code Detection Results\n\n';
            
            try {
              const reportPath = path.join('cactus-wealth-frontend', 'deadcode-report.json');
              if (fs.existsSync(reportPath)) {
                const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
                
                const { summary } = report;
                
                if (summary.totalIssues === 0) {
                  reportContent += 'üéâ **No dead code issues found!** Repository is clean.\n\n';
                } else {
                  reportContent += `‚ö†Ô∏è **Found ${summary.totalIssues} issues:**\n`;
                  if (summary.criticalIssues > 0) {
                    reportContent += `- ‚ùå **${summary.criticalIssues} critical issues** (unused dependencies, exports, imports)\n`;
                  }
                  if (summary.warnings > 0) {
                    reportContent += `- ‚ö†Ô∏è **${summary.warnings} warnings** (orphaned files, unused dev dependencies)\n`;
                  }
                  
                  reportContent += '\n### Recommended Actions:\n';
                  reportContent += '1. Remove unused dependencies from `package.json`\n';
                  reportContent += '2. Delete unused TypeScript exports\n';
                  reportContent += '3. Remove unused imports from files\n';
                  reportContent += '4. Review orphaned files and remove if not needed\n\n';
                  
                  reportContent += '### Commands to fix:\n';
                  reportContent += '```bash\n';
                  reportContent += 'cd cactus-wealth-frontend\n';
                  reportContent += 'npm run lint:fix          # Fix unused imports\n';
                  reportContent += 'npm run analyze:dead-code # Show unused exports\n';
                  reportContent += 'npx depcheck             # Show unused dependencies\n';
                  reportContent += '```\n';
                }
              } else {
                reportContent += '‚ùå **Error:** Could not generate dead code report.\n';
              }
            } catch (error) {
              reportContent += `‚ùå **Error:** ${error.message}\n`;
            }
            
            // Add footer
            reportContent += '\n---\n';
            reportContent += '*This check was automatically generated by the dead code detection system.*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reportContent
            });
            
      - name: Fail on critical issues
        if: steps.deadcode.outcome == 'failure'
        run: |
          echo "‚ùå Dead code detection found critical issues that must be fixed before merging."
          echo "Please review the report above and fix the issues."
          exit 1 