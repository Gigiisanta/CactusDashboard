[tool.poetry]
name = "cactus-wealth-backend"
version = "0.1.0"
description = "Backend API for Cactus Wealth Dashboard - Financial Advisor Platform"
authors = ["Cactus Wealth Team <team@cactuswealth.com>"]
readme = "README.md"
packages = [{include = "cactus_wealth", from = "src"}]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
typing_extensions = "^4.12.2"
anyio = "^4.6.2"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
sqlmodel = "^0.0.19"
pydantic-settings = "^2.3.4"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.7"
email-validator = "^2.1.0"
yfinance = "^0.2.28"
pandas = "^2.2.0"
numpy = "^1.26.0"
jinja2 = "^3.1.3"
weasyprint = "^61.2"
arq = "^0.26.3"
redis = "^5.0.0"
bcrypt = "<4.0.0"
structlog = "^25.4.0"
websockets = "^15.0.1"
httpx = "^0.27.0"
httpcore = "^1.0.2"
aiohttp = "^3.10.0"
authlib = "^1.2.1"
fido2 = "^1.1.3"
webauthn = "^2.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-mock = "^3.12.0"
pytest-cov = "^5.0.0"
ruff = "^0.5.0"
mypy = "^1.10.0"
vulture = "^2.14"
types-python-jose = "^3.3.4.20240106"
sqlalchemy-utils = "^0.41.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
per-file-ignores = {"tests/**/*" = ["ARG001", "ARG002"]}
# Ruff configuration for linting and formatting
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err`
    "ARG001", # Unused function argument
    "ARG002", # Unused method argument
    "E402",  # Module level import not at top of file
]
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "alembic/versions",
]

[tool.ruff.format]
# Enable auto-formatting
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["cactus_wealth"]
force-single-line = false
force-sort-within-sections = false
single-line-exclusions = ["typing"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# Pytest configuration
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    # "--cov=src/cactus_wealth",
    # "--cov-report=term-missing",
    # "--cov-report=html",
    # "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "smoke: marks a tiny, representative subset for quick validation",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
] 
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s %(levelname)s %(name)s %(message)s"
[tool.vulture]
min_confidence = 80
paths = ["src/", "tests/"]
exclude = ["migrations/", "alembic/", "*.py.mako"]
ignore_decorators = [
    "@app.route", "@router.get", "@router.post", "@router.put", "@router.delete", "@router.patch",
    "@app.get", "@app.post", "@app.put", "@app.delete", "@app.patch",
    "@pytest.fixture", "@pytest.mark.*", 
    "@sqlmodel.Field", "@computed_field",
    "@field_validator", "@model_validator"
]
ignore_names = ["_*", "test_*", "main", "create_app", "*_schema", "*Schema", "Base"]
