# Docker Compose para Desarrollo - CactusDashboard
# ConfiguraciÃ³n optimizada para desarrollo local

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cactus_dashboard
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - cactus_dev_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cactus_dashboard"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - cactus_dev_network
    command: >
      redis-server
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_dev_data:/data
    deploy:
      resources:
        limits:
          memory: 150M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: ./cactus-wealth-backend/Dockerfile
      args:
        - ENVIRONMENT=development
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/cactus_dashboard
      REDIS_URL: redis://redis:6379
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-http://localhost:3000/auth/google/callback}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-development-secret}
      PYTHONPATH: /app/src
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      ENVIRONMENT: development
      LOG_LEVEL: DEBUG
      ENABLE_RELOAD: "true"
      ENABLE_DEBUG_MODE: "true"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./cactus-wealth-backend:/app
      - ./logs:/app/logs
    networks:
      - cactus_dev_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./cactus-wealth-frontend
      dockerfile: Dockerfile.dev
      args:
        - NODE_ENV=development
        - NEXT_TELEMETRY_DISABLED=1
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000/api
      NEXT_PUBLIC_FRONTEND_URL: http://localhost:3000
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${NEXT_PUBLIC_GOOGLE_CLIENT_ID:-}
      NEXT_PUBLIC_GOOGLE_REDIRECT_URI: http://localhost:3000/auth/google/callback
      NEXT_PUBLIC_GITHUB_CLIENT_ID: ${NEXT_PUBLIC_GITHUB_CLIENT_ID:-}
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-development-secret}
      NEXT_TELEMETRY_DISABLED: 1
      FAST_REFRESH: true
      CHOKIDAR_USEPOLLING: true
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./cactus-wealth-frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - cactus_dev_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 120s

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  cactus_dev_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/16