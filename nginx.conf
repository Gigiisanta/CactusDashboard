# =============================================================================
# NGINX CONFIGURACIÓN UNIFICADA - CACTUS DASHBOARD
# =============================================================================
# Configuración completa con soporte para desarrollo y producción
# Incluye seguridad avanzada, rate limiting y SSL
# =============================================================================

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=frontend:10m rate=30r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Upstream definitions
upstream backend {
    server backend:8000;
    keepalive 32;
}

upstream frontend {
    server frontend:3000;
    keepalive 32;
}

# =============================================================================
# HTTP SERVER (Desarrollo y redirección HTTPS)
# =============================================================================
server {
    listen 80;
    server_name YOUR_DOMAIN_HERE _;
    
    # Configuraciones de seguridad básicas
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Límites de conexión
    limit_conn addr 10;
    
    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Redirección HTTPS en producción (comentar para desarrollo)
    # return 301 https://$host$request_uri;
    
    # Configuración para desarrollo (comentar en producción)
    include /etc/nginx/conf.d/common-locations.conf;
}

# =============================================================================
# HTTPS SERVER (Solo producción)
# =============================================================================
server {
    listen 443 ssl http2;
    server_name YOUR_DOMAIN_HERE;
    
    # Certificados SSL (configurar con Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN_HERE/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN_HERE/privkey.pem;
    
    # Configuraciones SSL seguras
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Headers de seguridad
    server_tokens off;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none';";
    
    # Límites de conexión
    limit_conn addr 10;
    
    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Incluir configuraciones comunes
    include /etc/nginx/conf.d/common-locations.conf;
}

# =============================================================================
# CONFIGURACIONES COMUNES (archivo separado)
# =============================================================================
# Crear archivo: /etc/nginx/conf.d/common-locations.conf

# Archivos estáticos
location /static/ {
    alias /var/www/static/;
    expires 1y;
    add_header Cache-Control "public, immutable";
}

# API Backend con rate limiting
location /api/ {
    limit_req zone=api burst=20 nodelay;
    
    proxy_pass http://backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts optimizados
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Buffering optimizado
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
}

# Documentación API
location /docs {
    limit_req zone=api burst=10 nodelay;
    
    proxy_pass http://backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# Health check (sin logs)
location /health {
    proxy_pass http://backend;
    proxy_set_header Host $host;
    access_log off;
}

# Frontend con rate limiting
location / {
    limit_req zone=frontend burst=50 nodelay;
    
    proxy_pass http://frontend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Configuración para Next.js
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
    
    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
}

# Bloquear acceso a servicios internos
location ~ ^/(db|redis|sync_bridge) {
    deny all;
    return 404;
}

# Bloquear archivos sensibles
location ~ /\. {
    deny all;
    return 404;
}

location ~ \.(env|log|conf)$ {
    deny all;
    return 404;
}

# =============================================================================
# INSTRUCCIONES DE USO
# =============================================================================
# 
# 1. Para desarrollo:
#    - Comentar la línea de redirección HTTPS
#    - Usar solo el servidor HTTP (puerto 80)
#
# 2. Para producción:
#    - Descomentar la redirección HTTPS
#    - Configurar certificados SSL
#    - Reemplazar YOUR_DOMAIN_HERE con tu dominio
#
# 3. Crear archivo común:
#    sudo mkdir -p /etc/nginx/conf.d/
#    sudo cp nginx.conf /etc/nginx/sites-available/cactus-dashboard
#    sudo ln -s /etc/nginx/sites-available/cactus-dashboard /etc/nginx/sites-enabled/
#
# =============================================================================